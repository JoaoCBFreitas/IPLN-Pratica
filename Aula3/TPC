#!/usr/bin/python3
"""
TPC - calcula o numero de ocorrencias de palavras
    argumentos: [ops] ficheiros
        ops: -a -Ordem alfabetica
             -f -Frequencia Relativa
             -l -Frequencia logaritmica
             Sem opcoes -numero de ocorrencias

...
"""
import re
import math
from getopt import getopt
import sys
# getopt com short options
ops, args = getopt(sys.argv[1:], "aofl:")
ops = dict(ops)
#print (ops,args)

dicionario = {}
for name in args:
    with open(name) as f:
        txt = f.read()
    mod = re.sub(r'\n\n+', '\n', txt)
    listaPalavras = re.split(r'\W+', mod)
    for x in listaPalavras:
        # se a length<1 ignora
        if not x:
            continue
        if x in dicionario:
            dicionario[x] += 1
        else:
            dicionario[x] = 1
numeroPalavras = 0
for key, value in dicionario.items():
    numeroPalavras = numeroPalavras+value

# Ordem alfabetica
if '-a' in ops:
    for key, value in sorted(dicionario.items(), key=lambda x: x[0].lower()):
        print(key, '------->', value)
else:
    if '-f' in ops:
        relativo = {}
        # Frequencia relativa
        for key, value in sorted(dicionario.items(), key=lambda x: x[1]):
            relativo[key] = (value/numeroPalavras)*1000000
        print(relativo)

    else:
        # Frequencia relativa logaritmica
        if '-l' in ops:
            logaritmico = {}
            for key, value in sorted(dicionario.items(), key=lambda x: x[1]):
                logaritmico[key] = math.log(value/numeroPalavras)*1000000
            print(logaritmico)
        else:
            # Numero de ocorrencias
            for key, value in sorted(dicionario.items(), key=lambda x: x[1]):
                print(value, '------->', key)

# criar um objecto atraves do pickle com as frequencias
